{"version":3,"file":"VaRadio.js","sources":["../../../../../src/components/va-radio/VaRadio.vue"],"sourcesContent":["<template>\n  <VaMessageListWrapper\n    :disabled=\"disabled\"\n    :success=\"success\"\n    :messages=\"messages\"\n    :error=\"computedError\"\n    :error-messages=\"computedErrorMessages\"\n    :error-count=\"errorCount\"\n    :role=\"roleComputed\"\n    @blur=\"onBlur\"\n    ref=\"container\"\n  >\n    <label\n      v-for=\"(option, index) in computedOptions\"\n      :key=\"index\"\n      :class=\"radioClass(option)\"\n      class=\"va-radio va-radio__square\"\n    >\n      <input\n        ref=\"input\"\n        class=\"va-radio__input\"\n        type=\"radio\"\n        role=\"radio\"\n        :value=\"isChecked(option)\"\n        :checked=\"isChecked(option)\"\n        :aria-checked=\"isChecked(option)\"\n        v-bind=\"inputAttributesComputed(option)\"\n        @change=\"selectOption(getValue(option), $event)\"\n        @focus=\"onFocus\"\n        @blur=\"onBlur\"\n      />\n\n      <slot name=\"icon\" v-bind=\"{\n        value: isChecked(option),\n        text: getText(option),\n        disabled: getDisabled(option),\n      }\">\n        <span\n          aria-hidden=\"true\"\n          class=\"va-radio__icon\"\n        >\n          <span\n            class=\"va-radio__icon__background\"\n          />\n          <span class=\"va-radio__icon__dot\" />\n        </span>\n      </slot>\n\n      <span\n        v-if=\"getText(option) || $slots.default\"\n        ref=\"label\"\n        class=\"va-radio__text\"\n      >\n         <slot v-bind=\"{\n          value: isChecked(option),\n          text: getText(option),\n          disabled: getDisabled(option),\n        }\">\n          {{ getText(option) }}\n        </slot>\n      </span>\n    </label>\n  </VaMessageListWrapper>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, PropType, computed, shallowRef } from 'vue'\n\nimport { generateUniqueId } from '../../utils/uuid'\nimport {\n  useComponentPresetProp,\n  useColors,\n  useSelectable,\n  Elements,\n  useSelectableProps,\n  useSelectableEmits,\n  useSelectableList,\n  useSelectableListProps,\n} from '../../composables'\nimport { VaMessageListWrapper } from '../va-input'\nimport type { VaRadioOption } from './types'\n\nexport default defineComponent({\n  name: 'VaRadio',\n  components: { VaMessageListWrapper },\n  emits: useSelectableEmits,\n  props: {\n    ...useSelectableProps,\n    ...useComponentPresetProp,\n    ...useSelectableListProps,\n    modelValue: {\n      type: [Boolean, Array, String, Object, Number] as PropType<\n        VaRadioOption['value']\n      >,\n      default: null,\n    },\n    options: {\n      type: Array<VaRadioOption>,\n      default: () => [],\n    },\n    name: { type: String, default: '' },\n    label: { type: String, default: undefined },\n    leftLabel: { type: Boolean, default: false },\n    color: { type: String, default: 'primary' },\n    option: {\n      type: [Object, String, Number] as PropType<VaRadioOption>,\n      default: undefined,\n    },\n  },\n  setup (props, { emit }) {\n    const { getColor } = useColors()\n    const elements: Elements = {\n      container: shallowRef<HTMLElement>(),\n      input: shallowRef<HTMLElement>(),\n      label: shallowRef<HTMLElement>(),\n    }\n\n    const {\n      computedError,\n      computedErrorMessages,\n      validationAriaAttributes,\n      onBlur,\n      onFocus,\n    } = useSelectable(props, emit, elements)\n\n    const { getText: originalGetText, getDisabled: originalGetDisabled, getValue } = useSelectableList(props)\n\n    const getText = (option: Parameters<typeof originalGetText>[0]) => {\n      if (props.options.length > 0) { return originalGetText(option) }\n\n      return props.label ?? originalGetText(option)\n    }\n    const getDisabled = (option: Parameters<typeof originalGetDisabled>[0]) => originalGetDisabled(option) || props.disabled\n\n    const isNoOption = computed(() => props.options.length === 0 && !props.option)\n\n    const isChecked = (option: VaRadioOption) => {\n      if (isNoOption.value) {\n        return props.modelValue\n      }\n\n      return props.modelValue === getValue(option)\n    }\n\n    const computedOptions = computed(() => {\n      if (isNoOption.value) {\n        return [{}]\n      }\n\n      if (props.option) {\n        return [props.option]\n      } else {\n        return props.options\n      }\n    })\n\n    const radioClass = (option: VaRadioOption) => ({\n      'va-radio--left-label': props.leftLabel,\n      'va-radio--selected': isChecked(option),\n      'va-radio--readonly': props.readonly,\n      'va-radio--disabled': props.disabled,\n      'va-radio--indeterminate': props.indeterminate,\n      'va-radio--error': computedError.value,\n    })\n\n    const selectOption = (option: any, event?: any) => {\n      if (isNoOption.value) {\n        emit('update:modelValue', event?.target?.checked || false)\n        return\n      }\n\n      emit('update:modelValue', option)\n    }\n\n    const labelStyle = computed(() => {\n      return {\n        color: computedError.value ? getColor('danger') : '',\n      }\n    })\n\n    const inputStyle = computed(() => {\n      const style = {\n        background: getColor(props.color),\n        borderColor: getColor(props.color),\n      }\n\n      if (computedError.value) {\n        style.borderColor = getColor('danger')\n      }\n\n      return style\n    })\n\n    const iconBackgroundComputedStyles = computed(() => ({\n      backgroundColor: getColor(props.color),\n    }))\n\n    const iconDotComputedStyles = computed(() => {\n      return {\n        borderColor: computedError.value ? getColor('danger') : getColor(props.color),\n        backgroundColor: getColor(props.color),\n      }\n    })\n\n    const iconComputedStyles = computed(() => {\n      return { borderColor: computedError.value ? getColor('danger') : getColor(props.color) }\n    })\n\n    const computedName = computed(() => props.name || generateUniqueId())\n    const inputAttributesComputed = (option: any) => {\n      const disabled = getDisabled(option)\n      return {\n        name: computedName.value,\n        disabled: disabled,\n        readonly: props.readonly,\n        tabindex: disabled ? -1 : 0,\n        'aria-disabled': disabled,\n        'aria-readOnly': props.readonly,\n        ...validationAriaAttributes.value,\n      }\n    }\n\n    return {\n      getDisabled,\n      isChecked,\n      computedOptions,\n      radioClass,\n      labelStyle,\n      inputStyle,\n      computedError,\n      computedErrorMessages,\n      iconBackgroundComputedStyles,\n      iconDotComputedStyles,\n      iconComputedStyles,\n      selectOption,\n      onFocus,\n      onBlur,\n      inputAttributesComputed,\n      computedName,\n      roleComputed: computed(() => props.options?.length > 0 ? 'radiogroup' : ''),\n      getText,\n      getValue,\n    }\n  },\n})\n</script>\n\n<style lang=\"scss\">\n@import \"../../styles/resources\";\n@import \"variables\";\n\n.va-radio {\n  display: var(--va-radio-display);\n  align-items: center;\n  cursor: var(--va-radio-cursor);\n  position: var(--va-radio-position);\n  margin-top: var(--va-radio-margin-top);\n  margin-right: var(--va-radio-margin-right);\n  transition: var(--va-radio-transition, var(--va-swing-transition));\n  font-family: var(--va-font-family);\n  color: v-bind(\"labelStyle.color\");\n\n  & + & {\n    margin-top: 0.5rem;\n  }\n\n  .va-radio:last-child {\n    margin: 0;\n  }\n\n  &--disabled {\n    cursor: var(--va-radio-disabled-cursor);\n  }\n\n  &--readonly {\n    @include va-readonly;\n\n    .va-radio--left-label,\n    .va-radio__text {\n      cursor: initial;\n      pointer-events: none;\n    }\n  }\n\n  &--left-label {\n    flex-direction: row-reverse;\n    display: inline-flex;\n    align-items: center;\n  }\n\n  &__input {\n    @include visually-hidden;\n  }\n\n  &__icon {\n    transition: var(--va-radio-icon-transition);\n    display: flex;\n    align-items: center;\n    width: var(--va-radio-icon-width);\n    height: var(--va-radio-icon-height);\n    border-color: v-bind(\"iconComputedStyles.borderColor\");\n    border-radius: var(--va-radio-icon-border-radius);\n    position: relative;\n    border: var(--va-radio-icon-border);\n    box-sizing: border-box;\n\n    .va-radio__input:disabled + & {\n      @include va-disabled;\n    }\n\n    .va-radio__input:focus-visible + & {\n      @include focus-outline('inherit');\n    }\n\n    &__dot {\n      transition: var(--va-radio-dot-transition, var(--va-swing-transition));\n      position: absolute;\n      top: var(--va-radio-dot-top);\n      left: var(--va-radio-dot-left);\n      right: var(--va-radio-dot-right);\n      bottom: var(--va-radio-dot-bottom);\n      border-radius: var(--va-radio-dot-border-radius);\n      opacity: var(--va-radio-dot-opacity);\n      border-color: v-bind(\"iconDotComputedStyles.borderColor\");\n      background-color: v-bind(\"iconDotComputedStyles.backgroundColor\");\n\n      .va-radio__input:checked + .va-radio__icon & {\n        opacity: 1;\n        top: 0.25rem;\n        left: 0.25rem;\n        right: 0.25rem;\n        bottom: 0.25rem;\n      }\n    }\n\n    &__background {\n      transition:\n        var(\n          --va-radio-background-transition,\n          var(--va-swing-transition)\n        );\n      position: absolute;\n      top: var(--va-radio-background-top);\n      left: var(--va-radio-background-left);\n      right: var(--va-radio-background-right);\n      bottom: var(--va-radio-background-bottom);\n      border-radius: var(--va-radio-background-border-radius);\n      z-index: var(--va-radio-background-z-index);\n      opacity: var(--va-radio-background-opacity);\n      background-color: v-bind('iconBackgroundComputedStyles.backgroundColor');\n\n      .va-radio:hover & {\n        opacity: 0.2;\n      }\n\n      .va-radio--disabled:hover & {\n        opacity: 0;\n      }\n    }\n  }\n\n  &__text {\n    display: var(--va-radio-text-display);\n    margin-left: var(--va-radio-text-margin-left);\n    margin-right: var(--va-radio-text-margin-right);\n\n    .va-radio--disabled & {\n      @include va-disabled;\n    }\n\n    .va-radio--left-label & {\n      margin-right: var(--va-radio-text-margin-left);\n      margin-left: var(--va-radio-text-margin-right);\n    }\n  }\n}\n</style>\n"],"names":["_createElementVNode","_resolveComponent","_openBlock","_createBlock","_createElementBlock","_Fragment","_renderList","_normalizeClass","_mergeProps","_renderSlot","_normalizeProps","_guardReactiveProps"],"mappings":";;;;AAsCU,MAAA,aAAY,CAAM,SAAA,WAAA,gBAAA,UAAA;MAClB,aAAsBA,mCAAA,QAAA;AAAA,EAAA,eAAA;AAAA;;;;;;AAuBP,QAAA,kCAAAC,iBAAA,sBAAA;AA3DpB,SAAAC,UAAA,GAAgBC,YAAA,iCAAA;AAAA,IAChB,UAAU,KAAA;AAAA,IACV,SAAO,KAAA;AAAA,IACP,UAAA,KAAA;AAAA,IACA,OAAA,KAAA;AAAA,IACA,kBAAM,KAAY;AAAA,IAClB,eAAM,KAAM;AAAA,IACb,MAAI,KAAA;AAAA,IAAA,QAAA,KAAA;AAAA;;;iBAII,IAAK,GAAAC,mBAAAC,UAAA,MAAAC,WAAA,KAAA,iBAAA,CAAA,QAAA,UAAA;AACL,eAAAJ,UAAA,GAAAE,mBAAa,SACb;AAAA,UAAA,KAAA;AAAA,UAEN,OAAAG,eAYE,MAZF,WAYE,MAAA,GAAA,2BAAA,CAAA;AAAA,QAAA,GAAA;AAAA,UAXWP,mBAAA,SAAAQ,WAAA;AAAA,YACX,SAAM;AAAA,YACN,KAAI;AAAA,YACJ,OAAK;AAAA,YACJ,MAAK;AAAA,YACL,MAAA;AAAA,YACA,OAAc,KAAA,UAAA,MAAA;AAAA,YAAA,SACP,KAAwB,UAAA,MAAA;AAAA,YAC/B,gBAAM,KAAE,UAAA,MAAA;AAAA,UAAA,GACR,KAAK,wBAAA,MAAA,GAAA;AAAA,YACL,UAAI,CAAE,WAAA,KAAA,aAAA,KAAA,SAAA,MAAA,GAAA,MAAA;AAAA,YAAA,SAAA,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,IAAA,SAAA,KAAA,WAAA,KAAA,QAAA,GAAA,IAAA;AAAA,YAGT,QAcO,OAAA,CAAA,MAAA,OAAA,CAAA,IAAA,IAAA,SAAA,KAAA,UAAA,KAAA,OAAA,GAAA,IAAA;AAAA,UAAA,CAAA,GAAA,MAdoC,IAAU,UAAA;AAAA,UAAAC,WAAuB,KAAQ,QAAM,QAAAC,eAAAC,mBAAA;AAAA,YAAA,OAAA,KAAqB,UAAY,MAAA;AAAA,YAcpH,MAAA,KAAA,QAAA,MAAA;AAAA,YAAA,UATL,KAQO,YAAA,MAAA;AAAA,UAAA,CAAA,CAAA,GAAA,MAAA;AAAA,YAID;AAAA,UAAA,CAAA;AAAA;YACN,KAAI;AAAA,YACJ,SAAM;AAAA,YAAA,KAAA;AAAA,YAEL,OAAA;AAAA,UAAA,GAAiC;AAAA,YAAmCF,WAAO,KAAC,QAAM,WAAAC,eAAAC,mBAAA;AAAA,cAAA,OAAA,KAAuB,UAAY,MAAA;AAAA,cAM/G,MAAA,KAAA,QAAA,MAAA;AAAA,cAAA,UAAA,KAAA,YAAA,MAAA;AAAA;;;;;;;;;;;"}