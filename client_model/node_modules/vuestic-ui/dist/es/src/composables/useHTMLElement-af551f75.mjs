import { isRef, computed, shallowRef } from "vue";
import { u as unwrapEl } from "../utils/unwrapEl-4d79d250.mjs";
import { u as useTemplateRef } from "./useTemplateRef-58eb28b3.mjs";
const useHTMLElement = (key) => {
  if (isRef(key)) {
    return computed({
      get() {
        return unwrapEl(key.value);
      },
      set(value) {
        key.value = value;
      }
    });
  }
  if (key) {
    const el2 = useTemplateRef(key);
    return computed({
      get() {
        return unwrapEl(el2.value);
      },
      set(value) {
        el2.value = value;
      }
    });
  }
  const el = shallowRef();
  return computed({
    set(value) {
      el.value = unwrapEl(value);
    },
    get() {
      return el.value;
    }
  });
};
export {
  useHTMLElement as u
};
//# sourceMappingURL=useHTMLElement-af551f75.mjs.map
