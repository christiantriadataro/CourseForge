import { c as createToastInstance, a as closeById, b as closeAllNotifications } from "../toast-f5a556e7.mjs";
import { u as useAppContext } from "../../../composables/useAppContext-4dd8ea1c.mjs";
const useToast = () => {
  const appContext = useAppContext();
  const createdInThisSetupContext = [];
  const init = (options) => {
    const id = createToastInstance(options, appContext.value);
    if (id) {
      createdInThisSetupContext.push(id);
    }
    return id;
  };
  const close = (id) => closeById(id);
  const closeAll = (allApps = false) => closeAllNotifications(allApps ? void 0 : appContext.value);
  const closeAllCreatedInThisHook = () => {
    createdInThisSetupContext.forEach((id) => closeById(id));
  };
  return {
    init,
    close,
    closeAll,
    closeAllCreatedInThisHook
  };
};
export {
  useToast as u
};
//# sourceMappingURL=useToast-28d879a9.mjs.map
